[{"/Users/moisesp/Documents/Robinhood Clone/robinhood-clone/robinhood/src/index.js":"1","/Users/moisesp/Documents/Robinhood Clone/robinhood-clone/robinhood/src/App.js":"2","/Users/moisesp/Documents/Robinhood Clone/robinhood-clone/robinhood/src/reportWebVitals.js":"3","/Users/moisesp/Documents/Robinhood Clone/robinhood-clone/robinhood/src/Header.js":"4","/Users/moisesp/Documents/Robinhood Clone/robinhood-clone/robinhood/src/Stats.js":"5","/Users/moisesp/Documents/Robinhood Clone/robinhood-clone/robinhood/src/Newsfeed.js":"6","/Users/moisesp/Documents/Robinhood Clone/robinhood-clone/robinhood/src/LineGraph.js":"7","/Users/moisesp/Documents/Robinhood Clone/robinhood-clone/robinhood/src/StatsRow.js":"8","/Users/moisesp/Documents/Robinhood Clone/robinhood-clone/robinhood/src/TimeLine.js":"9","/Users/moisesp/Documents/Robinhood Clone/robinhood-clone/robinhood/src/firebase.js":"10"},{"size":500,"mtime":1637051136062,"results":"11","hashOfConfig":"12"},{"size":528,"mtime":1637305870402,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1633052737977,"results":"14","hashOfConfig":"12"},{"size":914,"mtime":1635495122000,"results":"15","hashOfConfig":"12"},{"size":3278,"mtime":1637287601898,"results":"16","hashOfConfig":"12"},{"size":1144,"mtime":1637053888000,"results":"17","hashOfConfig":"12"},{"size":2548,"mtime":1636863124926,"results":"18","hashOfConfig":"12"},{"size":1858,"mtime":1637228369000,"results":"19","hashOfConfig":"12"},{"size":705,"mtime":1637052954667,"results":"20","hashOfConfig":"12"},{"size":513,"mtime":1637051264000,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1useqxy",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/moisesp/Documents/Robinhood Clone/robinhood-clone/robinhood/src/index.js",[],["47","48"],"/Users/moisesp/Documents/Robinhood Clone/robinhood-clone/robinhood/src/App.js",["49","50"],"import logo from './logo.svg';\nimport './App.css';\nimport Header from './Header';\nimport Newsfeed from './Newsfeed';\nimport  Stats  from './Stats';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* Header */}\n      <div className=\"app__header\">\n        {/* <Header /> */}\n      </div>\n      <div className=\"app__body\">\n        <div className=\"app__container\">\n          <Newsfeed />\n          {/* Stats */}\n          <Stats />\n        </div>\n      </div>\n      {/* Body */}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/moisesp/Documents/Robinhood Clone/robinhood-clone/robinhood/src/reportWebVitals.js",[],"/Users/moisesp/Documents/Robinhood Clone/robinhood-clone/robinhood/src/Header.js",["51","52","53","54","55","56"],"import React from 'react'\nimport Logo from './robinhood.svg';\nimport './Header.css';\n\nfunction Header() {\n    return (\n        <div className=\"header__wrapper\">\n            {/* logo */}\n                <div className=\"header__logo\">\n                    <img src={Logo} width={25} />\n                </div>\n    \n            {/* search */}\n                <div className=\"header__search\">\n                    <div className=\"header__searchContainer\">\n                        <input placeholder=\"Search\" type=\"text\" />\n                    </div>\n                </div>\n            {/* menutiems */}\n            <div className=\"header__menuItems\">\n                <a href=\"#\">Free Stocks</a>\n                <a href=\"#\">Portfolio</a>\n                <a href=\"#\">Cash</a>\n                <a href=\"#\">Messages</a>\n                <a href=\"#\">Account</a>\n            </div>\n\n        </div>\n    )\n}\n\nexport default Header\n","/Users/moisesp/Documents/Robinhood Clone/robinhood-clone/robinhood/src/Stats.js",["57","58","59"],"import React, { useState, useEffect } from 'react'\nimport './Stats.css';\nimport axios from \"axios\";\nimport StatsRow from './StatsRow';\nimport { db } from './firebase';\n\nconst TOKEN = \"c69i0k2ad3i87ccnutp0\";\nconst BASE_URL = \"https://finnhub.io/api/v1/quote\";\n\nfunction Stats() {\n\n\n    const [stockData, setStockData] = useState([]);\n    const [myStock, setMyStocks] = useState([]);\n\n    const getMyStocks = () => {\n        db\n        .collection('myStocks')\n        .onSnapshot(snapshot => {\n            let promises = [];\n            let tempData = []\n            snapshot.docs.map((doc) => {\n              promises.push(getStocksData(doc.data().ticker)\n              .then(res => {\n                tempData.push({\n                  id: doc.id,\n                  data: doc.data(),\n                  info: res.data\n                })\n              })\n            )})\n            Promise.all(promises).then(()=>{\n              setMyStocks(tempData);\n            })\n        })\n      }\n\n    const getStocksData = (stock) => {\n        return axios\n        .get(`${BASE_URL}?symbol=${stock}&token=${TOKEN}`)\n        .catch((error) => {\n            console.error(\"Error\", error.message);\n        });\n    }\n\n    useEffect(() => {\n        let stockData = [];\n        const stocksList = [\"AAPL\", \"MSFT\", \"TSLA\", \"FB\", \"BABA\", \"UBER\", \"DIS\", \"SBUX\"];\n\n        getMyStocks();\n        let promises = [];\n        stocksList.map((stock) => {\n          promises.push(\n            getStocksData(stock)\n            .then((res) => {\n                stockData.push({\n                    name: stock,\n                    ...res.data\n              });\n            })\n          )\n        });\n    \n        Promise.all(promises).then(()=>{\n            setStockData(stockData);\n            console.log(stockData);\n        })\n      }, []);\n\n    return (\n        <div className=\"stats\">\n            <div className=\"stats__container\">\n                <div className=\"stats__header\">\n                    <p>Stocks</p>\n                </div>\n                <div className=\"stats__content\">\n                <div className=\"stats__rows\">\n                    {myStock.map((stock) => (\n                    <StatsRow\n                        key={stock.data.ticker}\n                        name={stock.data.ticker}\n                        openPrice={stock.info.o}\n                        volume={stock.data.shares}\n                        price={stock.info.c}\n                        previousClose={stock.info.pc}\n                    />\n                    ))}\n                </div>\n                </div>\n                <div className=\"stats__header stats__lists\">\n                    <p>Lists</p>\n                </div>\n                <div className=\"stats__content\">\n                    <div className=\"stats__rows\">\n                        {stockData.map((stock) => (\n                        <StatsRow\n                            key={stock.name}\n                            name={stock.name}\n                            openPrice={stock.o}\n                            price={stock.c}\n                            previousClose={stock.pc}\n                        />\n                        ))}\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Stats","/Users/moisesp/Documents/Robinhood Clone/robinhood-clone/robinhood/src/Newsfeed.js",[],"/Users/moisesp/Documents/Robinhood Clone/robinhood-clone/robinhood/src/LineGraph.js",[],"/Users/moisesp/Documents/Robinhood Clone/robinhood-clone/robinhood/src/StatsRow.js",["60"],"import React from 'react';\nimport StockSVG from './stock.svg';\nimport './StatsRow.css';\nimport { db } from './firebase';\n\nfunction StatsRow(props) {\n\n    const percentage = ((props.price - props.previousClose)/props.previousClose) * 100;\n\n    const buyStock = () => {\n        db.collection('myStocks')\n            .where(\"ticker\", \"==\", props.name)\n            .get()\n            .then((querySnapshot) => {\n                if(!querySnapshot.empty){\n                    // Update the record\n                    querySnapshot.forEach((doc) => {\n                        // doc.data() is never undefined for query doc snapshots\n                        db.collection('myStocks')\n                        .doc(doc.id)\n                        .update({\n                            shares: doc.data().shares +=1\n                        })\n                    });\n                }\n                else{\n                    // Add a new record\n                    console.log(\"Not available\");\n                    db.collection('myStocks')\n                        .add({\n                            ticker: props.name,\n                            shares: 1\n                        })\n                }\n                \n        })\n    }\n    return (\n        <div className=\"row\" onClick={buyStock}>\n            <div className=\"row__intro\">\n                <h1>{props?.name}</h1>\n                <p>{props.volume &&\n                    (props.volume + \" shares\")\n                }</p>\n            </div>\n            <div className=\"row__chart\">\n                <img src={StockSVG} height={16} />\n            </div>\n            <div className=\"row__numbers\">\n                <p className=\"row__price\">{props.price}</p>\n                <p className=\"row__percentage\"> {Number(percentage).toFixed(2)}%</p>\n            </div>\n        </div>\n    )\n}\n\nexport default StatsRow\n","/Users/moisesp/Documents/Robinhood Clone/robinhood-clone/robinhood/src/TimeLine.js",[],"/Users/moisesp/Documents/Robinhood Clone/robinhood-clone/robinhood/src/firebase.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":1,"column":8,"nodeType":"67","messageId":"68","endLine":1,"endColumn":12},{"ruleId":"65","severity":1,"message":"69","line":3,"column":8,"nodeType":"67","messageId":"68","endLine":3,"endColumn":14},{"ruleId":"70","severity":1,"message":"71","line":10,"column":21,"nodeType":"72","endLine":10,"endColumn":50},{"ruleId":"73","severity":1,"message":"74","line":21,"column":17,"nodeType":"72","endLine":21,"endColumn":29},{"ruleId":"73","severity":1,"message":"74","line":22,"column":17,"nodeType":"72","endLine":22,"endColumn":29},{"ruleId":"73","severity":1,"message":"74","line":23,"column":17,"nodeType":"72","endLine":23,"endColumn":29},{"ruleId":"73","severity":1,"message":"74","line":24,"column":17,"nodeType":"72","endLine":24,"endColumn":29},{"ruleId":"73","severity":1,"message":"74","line":25,"column":17,"nodeType":"72","endLine":25,"endColumn":29},{"ruleId":"75","severity":1,"message":"76","line":22,"column":37,"nodeType":"77","messageId":"78","endLine":22,"endColumn":39},{"ruleId":"75","severity":1,"message":"76","line":52,"column":32,"nodeType":"77","messageId":"78","endLine":52,"endColumn":34},{"ruleId":"79","severity":1,"message":"80","line":68,"column":10,"nodeType":"81","endLine":68,"endColumn":12,"suggestions":"82"},{"ruleId":"70","severity":1,"message":"71","line":47,"column":17,"nodeType":"72","endLine":47,"endColumn":51},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getMyStocks'. Either include it or remove the dependency array.","ArrayExpression",["85"],"no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},"Update the dependencies array to be: [getMyStocks]",{"range":"88","text":"89"},[1809,1811],"[getMyStocks]"]